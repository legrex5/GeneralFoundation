/*
 * Created on 6 Dec 2015 ( Time 04:08:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package tristi.general.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.persistence.*;
import org.hibernate.annotations.Type;

/**
 * Persistent class for entity stored in table "location"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="location", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="LocationEntity.countAll", query="SELECT COUNT(x) FROM LocationEntity x" )
} )
public class LocationEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="locationid", nullable=false, length=255)
    @Type(type = "org.hibernate.type.PostgresUUIDType")
    private UUID     locationid   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="locationcode", length=100)
    private String     locationcode ;

    @Column(name="locationname", length=100)
    private String     locationname ;

    @Column(name="locationismain")
    private Boolean    locationismain ;

    @Column(name="locationisactive")
    private Boolean    locationisactive ;

    @Temporal(TemporalType.DATE)
    @Column(name="locationmoddate")
    private Date       locationmoddate ;

	// "locationUserid" (column "location_userid") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="location_userid", referencedColumnName="userid")
    private UseraccessEntity useraccess  ;

    @OneToMany(mappedBy="location", targetEntity=LocationdtlEntity.class)
    private List<LocationdtlEntity> listOfLocationdtl;

    @OneToMany(mappedBy="location", targetEntity=ProductstockEntity.class)
    private List<ProductstockEntity> listOfProductstock;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public LocationEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setLocationid( UUID locationid ) {
        this.locationid = locationid ;
    }
    public UUID getLocationid() {
        return this.locationid;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : locationcode ( varchar ) 
    public void setLocationcode( String locationcode ) {
        this.locationcode = locationcode;
    }
    public String getLocationcode() {
        return this.locationcode;
    }

    //--- DATABASE MAPPING : locationname ( varchar ) 
    public void setLocationname( String locationname ) {
        this.locationname = locationname;
    }
    public String getLocationname() {
        return this.locationname;
    }

    //--- DATABASE MAPPING : locationismain ( bool ) 
    public void setLocationismain( Boolean locationismain ) {
        this.locationismain = locationismain;
    }
    public Boolean getLocationismain() {
        return this.locationismain;
    }

    //--- DATABASE MAPPING : locationisactive ( bool ) 
    public void setLocationisactive( Boolean locationisactive ) {
        this.locationisactive = locationisactive;
    }
    public Boolean getLocationisactive() {
        return this.locationisactive;
    }

    //--- DATABASE MAPPING : locationmoddate ( date ) 
    public void setLocationmoddate( Date locationmoddate ) {
        this.locationmoddate = locationmoddate;
    }
    public Date getLocationmoddate() {
        return this.locationmoddate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUseraccess( UseraccessEntity useraccess ) {
        this.useraccess = useraccess;
    }
    public UseraccessEntity getUseraccess() {
        return this.useraccess;
    }

    public void setListOfLocationdtl( List<LocationdtlEntity> listOfLocationdtl ) {
        this.listOfLocationdtl = listOfLocationdtl;
    }
    public List<LocationdtlEntity> getListOfLocationdtl() {
        return this.listOfLocationdtl;
    }

    public void setListOfProductstock( List<ProductstockEntity> listOfProductstock ) {
        this.listOfProductstock = listOfProductstock;
    }
    public List<ProductstockEntity> getListOfProductstock() {
        return this.listOfProductstock;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(locationid);
        sb.append("]:"); 
        sb.append(locationcode);
        sb.append("|");
        sb.append(locationname);
        sb.append("|");
        sb.append(locationismain);
        sb.append("|");
        sb.append(locationisactive);
        sb.append("|");
        sb.append(locationmoddate);
        return sb.toString(); 
    } 

}
