/*
 * Created on 6 Dec 2015 ( Time 04:08:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package tristi.general.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.persistence.*;
import org.hibernate.annotations.Type;

/**
 * Persistent class for entity stored in table "product"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="product", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProductEntity.countAll", query="SELECT COUNT(x) FROM ProductEntity x" )
} )
public class ProductEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="productid", nullable=false, length=255)
    @Type(type = "org.hibernate.type.PostgresUUIDType")
    private UUID     productid    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="productcode", length=50)
    private String     productcode  ;

    @Column(name="productname", length=100)
    private String     productname  ;

    @Column(name="productisactive")
    private Boolean    productisactive ;

    @Column(name="productbaseprice")
    private Double     productbaseprice ;

    @Column(name="productprice")
    private Double     productprice ;

    @Temporal(TemporalType.DATE)
    @Column(name="productmoddate")
    private Date       productmoddate ;

	// "productUserid" (column "product_userid") is not defined by itself because used as FK in a link 
	// "productTypeid" (column "product_typeid") is not defined by itself because used as FK in a link 
	// "productCategoryid" (column "product_categoryid") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="product_userid", referencedColumnName="userid")
    private UseraccessEntity useraccess  ;

    @OneToMany(mappedBy="product", targetEntity=ProductuomEntity.class)
    private List<ProductuomEntity> listOfProductuom;

    @OneToMany(mappedBy="product", targetEntity=SupplierproductEntity.class)
    private List<SupplierproductEntity> listOfSupplierproduct;

    @ManyToOne
    @JoinColumn(name="product_typeid", referencedColumnName="typeid")
    private TypeEntity type        ;

    @ManyToOne
    @JoinColumn(name="product_categoryid", referencedColumnName="categoryid")
    private CategoryEntity category    ;

    @OneToMany(mappedBy="product", targetEntity=PricehistoryEntity.class)
    private List<PricehistoryEntity> listOfPricehistory;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProductEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setProductid( UUID productid ) {
        this.productid = productid ;
    }
    public UUID getProductid() {
        return this.productid;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : productcode ( varchar ) 
    public void setProductcode( String productcode ) {
        this.productcode = productcode;
    }
    public String getProductcode() {
        return this.productcode;
    }

    //--- DATABASE MAPPING : productname ( varchar ) 
    public void setProductname( String productname ) {
        this.productname = productname;
    }
    public String getProductname() {
        return this.productname;
    }

    //--- DATABASE MAPPING : productisactive ( bool ) 
    public void setProductisactive( Boolean productisactive ) {
        this.productisactive = productisactive;
    }
    public Boolean getProductisactive() {
        return this.productisactive;
    }

    //--- DATABASE MAPPING : productbaseprice ( float8 ) 
    public void setProductbaseprice( Double productbaseprice ) {
        this.productbaseprice = productbaseprice;
    }
    public Double getProductbaseprice() {
        return this.productbaseprice;
    }

    //--- DATABASE MAPPING : productprice ( float8 ) 
    public void setProductprice( Double productprice ) {
        this.productprice = productprice;
    }
    public Double getProductprice() {
        return this.productprice;
    }

    //--- DATABASE MAPPING : productmoddate ( date ) 
    public void setProductmoddate( Date productmoddate ) {
        this.productmoddate = productmoddate;
    }
    public Date getProductmoddate() {
        return this.productmoddate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUseraccess( UseraccessEntity useraccess ) {
        this.useraccess = useraccess;
    }
    public UseraccessEntity getUseraccess() {
        return this.useraccess;
    }

    public void setListOfProductuom( List<ProductuomEntity> listOfProductuom ) {
        this.listOfProductuom = listOfProductuom;
    }
    public List<ProductuomEntity> getListOfProductuom() {
        return this.listOfProductuom;
    }

    public void setListOfSupplierproduct( List<SupplierproductEntity> listOfSupplierproduct ) {
        this.listOfSupplierproduct = listOfSupplierproduct;
    }
    public List<SupplierproductEntity> getListOfSupplierproduct() {
        return this.listOfSupplierproduct;
    }

    public void setType( TypeEntity type ) {
        this.type = type;
    }
    public TypeEntity getType() {
        return this.type;
    }

    public void setCategory( CategoryEntity category ) {
        this.category = category;
    }
    public CategoryEntity getCategory() {
        return this.category;
    }

    public void setListOfPricehistory( List<PricehistoryEntity> listOfPricehistory ) {
        this.listOfPricehistory = listOfPricehistory;
    }
    public List<PricehistoryEntity> getListOfPricehistory() {
        return this.listOfPricehistory;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(productid);
        sb.append("]:"); 
        sb.append(productcode);
        sb.append("|");
        sb.append(productname);
        sb.append("|");
        sb.append(productisactive);
        sb.append("|");
        sb.append(productbaseprice);
        sb.append("|");
        sb.append(productprice);
        sb.append("|");
        sb.append(productmoddate);
        return sb.toString(); 
    } 

}
