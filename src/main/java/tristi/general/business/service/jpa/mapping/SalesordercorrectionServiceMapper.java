/*
 * Created on 6 Dec 2015 ( Time 04:08:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.business.service.jpa.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import tristi.general.bean.Salesordercorrection;
import tristi.general.bean.jpa.SalesordercorrectionEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class SalesordercorrectionServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public SalesordercorrectionServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'SalesordercorrectionEntity' to 'Salesordercorrection'
     *
     * @param salesordercorrectionEntity
     * @return Salesordercorrection
     */
    public Salesordercorrection mapSalesordercorrectionEntityToSalesordercorrection(SalesordercorrectionEntity salesordercorrectionEntity) {
        if (salesordercorrectionEntity == null) {
            return null;
        }

        //--- Generic mapping 
        Salesordercorrection salesordercorrection = map(salesordercorrectionEntity, Salesordercorrection.class);

        return salesordercorrection;
    }

    /**
     * Mapping from 'Salesordercorrection' to 'SalesordercorrectionEntity'
     *
     * @param salesordercorrection
     * @param salesordercorrectionEntity
     */
    public void mapSalesordercorrectionToSalesordercorrectionEntity(Salesordercorrection salesordercorrection, SalesordercorrectionEntity salesordercorrectionEntity) {
        if (salesordercorrection == null) {
            return;
        }

        //--- Generic mapping 
        map(salesordercorrection, salesordercorrectionEntity);

    }

    /**
     * {@inheritDoc}
     *
     * @return ModelMapper
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}
