/*
 * Created on 6 Dec 2015 ( Time 04:08:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.business.service.jpa.mapping;

import java.util.UUID;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import tristi.general.bean.Productstock;
import tristi.general.bean.jpa.ProductstockEntity;
import tristi.general.bean.jpa.ProductuomEntity;
import tristi.general.bean.jpa.UseraccessEntity;
import tristi.general.bean.jpa.LocationEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ProductstockServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public ProductstockServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'ProductstockEntity' to 'Productstock'
     *
     * @param productstockEntity
     * @return Productstock
     */
    public Productstock mapProductstockEntityToProductstock(ProductstockEntity productstockEntity) {
        if (productstockEntity == null) {
            return null;
        }

        //--- Generic mapping 
        Productstock productstock = map(productstockEntity, Productstock.class);

        //--- Link mapping ( link to Productuom )
        if (productstockEntity.getProductuom() != null) {
            productstock.setProductstockProductuomid(productstockEntity.getProductuom().getProductuomid().toString());
        }
        //--- Link mapping ( link to Useraccess )
        if (productstockEntity.getUseraccess() != null) {
            productstock.setProductstockUserid(productstockEntity.getUseraccess().getUserid().toString());
        }
        //--- Link mapping ( link to Location )
        if (productstockEntity.getLocation() != null) {
            productstock.setProductstockLocationid(productstockEntity.getLocation().getLocationid().toString());
        }
        return productstock;
    }

    /**
     * Mapping from 'Productstock' to 'ProductstockEntity'
     *
     * @param productstock
     * @param productstockEntity
     */
    public void mapProductstockToProductstockEntity(Productstock productstock, ProductstockEntity productstockEntity) {
        if (productstock == null) {
            return;
        }

        //--- Generic mapping 
        map(productstock, productstockEntity);

        //--- Link mapping ( link : productstock )
        if (hasLinkToProductuom(productstock)) {
            ProductuomEntity productuom1 = new ProductuomEntity();
            productuom1.setProductuomid(UUID.fromString(productstock.getProductstockProductuomid()));
            productstockEntity.setProductuom(productuom1);
        } else {
            productstockEntity.setProductuom(null);
        }

        //--- Link mapping ( link : productstock )
        if (hasLinkToUseraccess(productstock)) {
            UseraccessEntity useraccess2 = new UseraccessEntity();
            useraccess2.setUserid(UUID.fromString(productstock.getProductstockUserid()));
            productstockEntity.setUseraccess(useraccess2);
        } else {
            productstockEntity.setUseraccess(null);
        }

        //--- Link mapping ( link : productstock )
        if (hasLinkToLocation(productstock)) {
            LocationEntity location3 = new LocationEntity();
            location3.setLocationid(UUID.fromString(productstock.getProductstockLocationid()));
            productstockEntity.setLocation(location3);
        } else {
            productstockEntity.setLocation(null);
        }

    }

    /**
     * Verify that Productuom id is valid.
     *
     * @param Productuom Productuom
     * @return boolean
     */
    private boolean hasLinkToProductuom(Productstock productstock) {
        return productstock.getProductstockProductuomid() != null;
    }

    /**
     * Verify that Useraccess id is valid.
     *
     * @param Useraccess Useraccess
     * @return boolean
     */
    private boolean hasLinkToUseraccess(Productstock productstock) {
        return productstock.getProductstockUserid() != null;
    }

    /**
     * Verify that Location id is valid.
     *
     * @param Location Location
     * @return boolean
     */
    private boolean hasLinkToLocation(Productstock productstock) {
        return productstock.getProductstockLocationid() != null;
    }

    /**
     * {@inheritDoc}
     *
     * @return ModelMapper
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}
