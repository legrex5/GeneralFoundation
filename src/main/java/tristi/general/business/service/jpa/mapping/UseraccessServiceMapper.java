/*
 * Created on 6 Dec 2015 ( Time 04:09:00 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.business.service.jpa.mapping;

import java.util.UUID;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import tristi.general.bean.Useraccess;
import tristi.general.bean.jpa.UseraccessEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UseraccessServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public UseraccessServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'UseraccessEntity' to 'Useraccess'
     *
     * @param useraccessEntity
     * @return Useraccess
     */
    public Useraccess mapUseraccessEntityToUseraccess(UseraccessEntity useraccessEntity) {
        if (useraccessEntity == null) {
            return null;
        }

        //--- Generic mapping 
        Useraccess useraccess = map(useraccessEntity, Useraccess.class);

        //--- Link mapping ( link to Useraccess )
        if (useraccessEntity.getUseraccess() != null) {
            useraccess.setUserUserid(useraccessEntity.getUseraccess().getUserid().toString());
        }
        return useraccess;
    }

    /**
     * Mapping from 'Useraccess' to 'UseraccessEntity'
     *
     * @param useraccess
     * @param useraccessEntity
     */
    public void mapUseraccessToUseraccessEntity(Useraccess useraccess, UseraccessEntity useraccessEntity) {
        if (useraccess == null) {
            return;
        }

        //--- Generic mapping 
        map(useraccess, useraccessEntity);

        //--- Link mapping ( link : useraccess )
        if (hasLinkToUseraccess(useraccess)) {
            UseraccessEntity useraccess1 = new UseraccessEntity();
            useraccess1.setUserid(UUID.fromString(useraccess.getUserUserid()));
            useraccessEntity.setUseraccess(useraccess1);
        } else {
            useraccessEntity.setUseraccess(null);
        }

    }

    /**
     * Verify that Useraccess id is valid.
     *
     * @param Useraccess Useraccess
     * @return boolean
     */
    private boolean hasLinkToUseraccess(Useraccess useraccess) {
        return useraccess.getUserUserid() != null;
    }

    /**
     * {@inheritDoc}
     *
     * @return ModelMapper
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}
