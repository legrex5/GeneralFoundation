/*
 * Created on 6 Dec 2015 ( Time 04:08:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.business.service.jpa.mapping;

import java.util.UUID;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import tristi.general.bean.Returnsupplier;
import tristi.general.bean.jpa.ReturnsupplierEntity;
import tristi.general.bean.jpa.SupplierEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ReturnsupplierServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public ReturnsupplierServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'ReturnsupplierEntity' to 'Returnsupplier'
     *
     * @param returnsupplierEntity
     * @return Returnsupplier
     */
    public Returnsupplier mapReturnsupplierEntityToReturnsupplier(ReturnsupplierEntity returnsupplierEntity) {
        if (returnsupplierEntity == null) {
            return null;
        }

        //--- Generic mapping 
        Returnsupplier returnsupplier = map(returnsupplierEntity, Returnsupplier.class);

        //--- Link mapping ( link to Supplier )
        if (returnsupplierEntity.getSupplier() != null) {
            returnsupplier.setReturnsupplierSupplierid(returnsupplierEntity.getSupplier().getSupplierid().toString());
        }
        return returnsupplier;
    }

    /**
     * Mapping from 'Returnsupplier' to 'ReturnsupplierEntity'
     *
     * @param returnsupplier
     * @param returnsupplierEntity
     */
    public void mapReturnsupplierToReturnsupplierEntity(Returnsupplier returnsupplier, ReturnsupplierEntity returnsupplierEntity) {
        if (returnsupplier == null) {
            return;
        }

        //--- Generic mapping 
        map(returnsupplier, returnsupplierEntity);

        //--- Link mapping ( link : returnsupplier )
        if (hasLinkToSupplier(returnsupplier)) {
            SupplierEntity supplier1 = new SupplierEntity();
            supplier1.setSupplierid(UUID.fromString(returnsupplier.getReturnsupplierSupplierid()));
            returnsupplierEntity.setSupplier(supplier1);
        } else {
            returnsupplierEntity.setSupplier(null);
        }

    }

    /**
     * Verify that Supplier id is valid.
     *
     * @param Supplier Supplier
     * @return boolean
     */
    private boolean hasLinkToSupplier(Returnsupplier returnsupplier) {
        return returnsupplier.getReturnsupplierSupplierid() != null;
    }

    /**
     * {@inheritDoc}
     *
     * @return ModelMapper
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}
