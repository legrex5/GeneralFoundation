/*
 * Created on 6 Dec 2015 ( Time 04:08:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.business.service.jpa.mapping;

import java.util.UUID;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import tristi.general.bean.Pricehistory;
import tristi.general.bean.jpa.PricehistoryEntity;
import tristi.general.bean.jpa.UseraccessEntity;
import tristi.general.bean.jpa.ProductEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PricehistoryServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public PricehistoryServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'PricehistoryEntity' to 'Pricehistory'
     *
     * @param pricehistoryEntity
     * @return Pricehistory
     */
    public Pricehistory mapPricehistoryEntityToPricehistory(PricehistoryEntity pricehistoryEntity) {
        if (pricehistoryEntity == null) {
            return null;
        }

        //--- Generic mapping 
        Pricehistory pricehistory = map(pricehistoryEntity, Pricehistory.class);

        //--- Link mapping ( link to Useraccess )
        if (pricehistoryEntity.getUseraccess() != null) {
            pricehistory.setPricehistoryUserid(pricehistoryEntity.getUseraccess().getUserid().toString());
        }
        //--- Link mapping ( link to Product )
        if (pricehistoryEntity.getProduct() != null) {
            pricehistory.setPricehistoryProductid(pricehistoryEntity.getProduct().getProductid().toString());
        }
        return pricehistory;
    }

    /**
     * Mapping from 'Pricehistory' to 'PricehistoryEntity'
     *
     * @param pricehistory
     * @param pricehistoryEntity
     */
    public void mapPricehistoryToPricehistoryEntity(Pricehistory pricehistory, PricehistoryEntity pricehistoryEntity) {
        if (pricehistory == null) {
            return;
        }

        //--- Generic mapping 
        map(pricehistory, pricehistoryEntity);

        //--- Link mapping ( link : pricehistory )
        if (hasLinkToUseraccess(pricehistory)) {
            UseraccessEntity useraccess1 = new UseraccessEntity();
            useraccess1.setUserid(UUID.fromString(pricehistory.getPricehistoryUserid()));
            pricehistoryEntity.setUseraccess(useraccess1);
        } else {
            pricehistoryEntity.setUseraccess(null);
        }

        //--- Link mapping ( link : pricehistory )
        if (hasLinkToProduct(pricehistory)) {
            ProductEntity product2 = new ProductEntity();
            product2.setProductid(UUID.fromString(pricehistory.getPricehistoryProductid()));
            pricehistoryEntity.setProduct(product2);
        } else {
            pricehistoryEntity.setProduct(null);
        }

    }

    /**
     * Verify that Useraccess id is valid.
     *
     * @param Useraccess Useraccess
     * @return boolean
     */
    private boolean hasLinkToUseraccess(Pricehistory pricehistory) {
        return pricehistory.getPricehistoryUserid() != null;
    }

    /**
     * Verify that Product id is valid.
     *
     * @param Product Product
     * @return boolean
     */
    private boolean hasLinkToProduct(Pricehistory pricehistory) {
        return pricehistory.getPricehistoryProductid() != null;
    }

    /**
     * {@inheritDoc}
     *
     * @return ModelMapper
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}
