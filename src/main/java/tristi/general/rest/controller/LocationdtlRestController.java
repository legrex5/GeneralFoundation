/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Locationdtl;
import tristi.general.business.service.LocationdtlService;
import tristi.general.web.listitem.LocationdtlListItem;

/**
 * Spring MVC controller for 'Locationdtl' management.
 */
@Controller
public class LocationdtlRestController {

	@Resource
	private LocationdtlService locationdtlService;
	
	@RequestMapping( value="/items/locationdtl",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<LocationdtlListItem> findAllAsListItems() {
		List<Locationdtl> list = locationdtlService.findAll();
		List<LocationdtlListItem> items = new LinkedList<LocationdtlListItem>();
		for ( Locationdtl locationdtl : list ) {
			items.add(new LocationdtlListItem( locationdtl ) );
		}
		return items;
	}
	
	@RequestMapping( value="/locationdtl",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Locationdtl> findAll() {
		return locationdtlService.findAll();
	}

	@RequestMapping( value="/locationdtl/{locationdtlid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Locationdtl findOne(@PathVariable("locationdtlid") String locationdtlid) {
		return locationdtlService.findById(locationdtlid);
	}
	
	@RequestMapping( value="/locationdtl",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Locationdtl create(@RequestBody Locationdtl locationdtl) {
		return locationdtlService.create(locationdtl);
	}

	@RequestMapping( value="/locationdtl/{locationdtlid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Locationdtl update(@PathVariable("locationdtlid") String locationdtlid, @RequestBody Locationdtl locationdtl) {
		return locationdtlService.update(locationdtl);
	}

	@RequestMapping( value="/locationdtl/{locationdtlid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("locationdtlid") String locationdtlid) {
		locationdtlService.delete(locationdtlid);
	}
	
}
