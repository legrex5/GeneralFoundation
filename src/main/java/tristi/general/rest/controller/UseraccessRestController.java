/*
 * Created on 6 Dec 2015 ( Time 04:13:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Useraccess;
import tristi.general.business.service.UseraccessService;
import tristi.general.web.listitem.UseraccessListItem;

/**
 * Spring MVC controller for 'Useraccess' management.
 */
@Controller
public class UseraccessRestController {

	@Resource
	private UseraccessService useraccessService;
	
	@RequestMapping( value="/items/useraccess",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UseraccessListItem> findAllAsListItems() {
		List<Useraccess> list = useraccessService.findAll();
		List<UseraccessListItem> items = new LinkedList<UseraccessListItem>();
		for ( Useraccess useraccess : list ) {
			items.add(new UseraccessListItem( useraccess ) );
		}
		return items;
	}
	
	@RequestMapping( value="/useraccess",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Useraccess> findAll() {
		return useraccessService.findAll();
	}

	@RequestMapping( value="/useraccess/{userid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Useraccess findOne(@PathVariable("userid") String userid) {
		return useraccessService.findById(userid);
	}
	
	@RequestMapping( value="/useraccess",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Useraccess create(@RequestBody Useraccess useraccess) {
		return useraccessService.create(useraccess);
	}

	@RequestMapping( value="/useraccess/{userid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Useraccess update(@PathVariable("userid") String userid, @RequestBody Useraccess useraccess) {
		return useraccessService.update(useraccess);
	}

	@RequestMapping( value="/useraccess/{userid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("userid") String userid) {
		useraccessService.delete(userid);
	}
	
}
