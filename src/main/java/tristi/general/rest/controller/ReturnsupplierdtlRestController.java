/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Returnsupplierdtl;
import tristi.general.business.service.ReturnsupplierdtlService;
import tristi.general.web.listitem.ReturnsupplierdtlListItem;

/**
 * Spring MVC controller for 'Returnsupplierdtl' management.
 */
@Controller
public class ReturnsupplierdtlRestController {

	@Resource
	private ReturnsupplierdtlService returnsupplierdtlService;
	
	@RequestMapping( value="/items/returnsupplierdtl",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReturnsupplierdtlListItem> findAllAsListItems() {
		List<Returnsupplierdtl> list = returnsupplierdtlService.findAll();
		List<ReturnsupplierdtlListItem> items = new LinkedList<ReturnsupplierdtlListItem>();
		for ( Returnsupplierdtl returnsupplierdtl : list ) {
			items.add(new ReturnsupplierdtlListItem( returnsupplierdtl ) );
		}
		return items;
	}
	
	@RequestMapping( value="/returnsupplierdtl",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Returnsupplierdtl> findAll() {
		return returnsupplierdtlService.findAll();
	}

	@RequestMapping( value="/returnsupplierdtl/{returndtlid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplierdtl findOne(@PathVariable("returndtlid") String returndtlid) {
		return returnsupplierdtlService.findById(returndtlid);
	}
	
	@RequestMapping( value="/returnsupplierdtl",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplierdtl create(@RequestBody Returnsupplierdtl returnsupplierdtl) {
		return returnsupplierdtlService.create(returnsupplierdtl);
	}

	@RequestMapping( value="/returnsupplierdtl/{returndtlid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplierdtl update(@PathVariable("returndtlid") String returndtlid, @RequestBody Returnsupplierdtl returnsupplierdtl) {
		return returnsupplierdtlService.update(returnsupplierdtl);
	}

	@RequestMapping( value="/returnsupplierdtl/{returndtlid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("returndtlid") String returndtlid) {
		returnsupplierdtlService.delete(returndtlid);
	}
	
}
