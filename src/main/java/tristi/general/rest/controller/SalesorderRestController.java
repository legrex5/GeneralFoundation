/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Salesorder;
import tristi.general.business.service.SalesorderService;
import tristi.general.web.listitem.SalesorderListItem;

/**
 * Spring MVC controller for 'Salesorder' management.
 */
@Controller
public class SalesorderRestController {

	@Resource
	private SalesorderService salesorderService;
	
	@RequestMapping( value="/items/salesorder",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SalesorderListItem> findAllAsListItems() {
		List<Salesorder> list = salesorderService.findAll();
		List<SalesorderListItem> items = new LinkedList<SalesorderListItem>();
		for ( Salesorder salesorder : list ) {
			items.add(new SalesorderListItem( salesorder ) );
		}
		return items;
	}
	
	@RequestMapping( value="/salesorder",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Salesorder> findAll() {
		return salesorderService.findAll();
	}

	@RequestMapping( value="/salesorder/{salesorderid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesorder findOne(@PathVariable("salesorderid") String salesorderid) {
		return salesorderService.findById(salesorderid);
	}
	
	@RequestMapping( value="/salesorder",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesorder create(@RequestBody Salesorder salesorder) {
		return salesorderService.create(salesorder);
	}

	@RequestMapping( value="/salesorder/{salesorderid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesorder update(@PathVariable("salesorderid") String salesorderid, @RequestBody Salesorder salesorder) {
		return salesorderService.update(salesorder);
	}

	@RequestMapping( value="/salesorder/{salesorderid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("salesorderid") String salesorderid) {
		salesorderService.delete(salesorderid);
	}
	
}
