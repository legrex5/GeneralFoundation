/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Salesordercorrection;
import tristi.general.business.service.SalesordercorrectionService;
import tristi.general.web.listitem.SalesordercorrectionListItem;

/**
 * Spring MVC controller for 'Salesordercorrection' management.
 */
@Controller
public class SalesordercorrectionRestController {

	@Resource
	private SalesordercorrectionService salesordercorrectionService;
	
	@RequestMapping( value="/items/salesordercorrection",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SalesordercorrectionListItem> findAllAsListItems() {
		List<Salesordercorrection> list = salesordercorrectionService.findAll();
		List<SalesordercorrectionListItem> items = new LinkedList<SalesordercorrectionListItem>();
		for ( Salesordercorrection salesordercorrection : list ) {
			items.add(new SalesordercorrectionListItem( salesordercorrection ) );
		}
		return items;
	}
	
	@RequestMapping( value="/salesordercorrection",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Salesordercorrection> findAll() {
		return salesordercorrectionService.findAll();
	}

	@RequestMapping( value="/salesordercorrection/{salesordercorrectionid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesordercorrection findOne(@PathVariable("salesordercorrectionid") String salesordercorrectionid) {
		return salesordercorrectionService.findById(salesordercorrectionid);
	}
	
	@RequestMapping( value="/salesordercorrection",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesordercorrection create(@RequestBody Salesordercorrection salesordercorrection) {
		return salesordercorrectionService.create(salesordercorrection);
	}

	@RequestMapping( value="/salesordercorrection/{salesordercorrectionid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Salesordercorrection update(@PathVariable("salesordercorrectionid") String salesordercorrectionid, @RequestBody Salesordercorrection salesordercorrection) {
		return salesordercorrectionService.update(salesordercorrection);
	}

	@RequestMapping( value="/salesordercorrection/{salesordercorrectionid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("salesordercorrectionid") String salesordercorrectionid) {
		salesordercorrectionService.delete(salesordercorrectionid);
	}
	
}
