/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Returnsupplier;
import tristi.general.business.service.ReturnsupplierService;
import tristi.general.web.listitem.ReturnsupplierListItem;

/**
 * Spring MVC controller for 'Returnsupplier' management.
 */
@Controller
public class ReturnsupplierRestController {

	@Resource
	private ReturnsupplierService returnsupplierService;
	
	@RequestMapping( value="/items/returnsupplier",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReturnsupplierListItem> findAllAsListItems() {
		List<Returnsupplier> list = returnsupplierService.findAll();
		List<ReturnsupplierListItem> items = new LinkedList<ReturnsupplierListItem>();
		for ( Returnsupplier returnsupplier : list ) {
			items.add(new ReturnsupplierListItem( returnsupplier ) );
		}
		return items;
	}
	
	@RequestMapping( value="/returnsupplier",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Returnsupplier> findAll() {
		return returnsupplierService.findAll();
	}

	@RequestMapping( value="/returnsupplier/{returnsupplierid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplier findOne(@PathVariable("returnsupplierid") String returnsupplierid) {
		return returnsupplierService.findById(returnsupplierid);
	}
	
	@RequestMapping( value="/returnsupplier",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplier create(@RequestBody Returnsupplier returnsupplier) {
		return returnsupplierService.create(returnsupplier);
	}

	@RequestMapping( value="/returnsupplier/{returnsupplierid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Returnsupplier update(@PathVariable("returnsupplierid") String returnsupplierid, @RequestBody Returnsupplier returnsupplier) {
		return returnsupplierService.update(returnsupplier);
	}

	@RequestMapping( value="/returnsupplier/{returnsupplierid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("returnsupplierid") String returnsupplierid) {
		returnsupplierService.delete(returnsupplierid);
	}
	
}
