/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Purchaseorder;
import tristi.general.business.service.PurchaseorderService;
import tristi.general.web.listitem.PurchaseorderListItem;

/**
 * Spring MVC controller for 'Purchaseorder' management.
 */
@Controller
public class PurchaseorderRestController {

	@Resource
	private PurchaseorderService purchaseorderService;
	
	@RequestMapping( value="/items/purchaseorder",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PurchaseorderListItem> findAllAsListItems() {
		List<Purchaseorder> list = purchaseorderService.findAll();
		List<PurchaseorderListItem> items = new LinkedList<PurchaseorderListItem>();
		for ( Purchaseorder purchaseorder : list ) {
			items.add(new PurchaseorderListItem( purchaseorder ) );
		}
		return items;
	}
	
	@RequestMapping( value="/purchaseorder",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Purchaseorder> findAll() {
		return purchaseorderService.findAll();
	}

	@RequestMapping( value="/purchaseorder/{purchaseorderid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Purchaseorder findOne(@PathVariable("purchaseorderid") String purchaseorderid) {
		return purchaseorderService.findById(purchaseorderid);
	}
	
	@RequestMapping( value="/purchaseorder",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Purchaseorder create(@RequestBody Purchaseorder purchaseorder) {
		return purchaseorderService.create(purchaseorder);
	}

	@RequestMapping( value="/purchaseorder/{purchaseorderid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Purchaseorder update(@PathVariable("purchaseorderid") String purchaseorderid, @RequestBody Purchaseorder purchaseorder) {
		return purchaseorderService.update(purchaseorder);
	}

	@RequestMapping( value="/purchaseorder/{purchaseorderid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("purchaseorderid") String purchaseorderid) {
		purchaseorderService.delete(purchaseorderid);
	}
	
}
