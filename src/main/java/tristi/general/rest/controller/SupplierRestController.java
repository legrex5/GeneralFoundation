/*
 * Created on 6 Dec 2015 ( Time 04:13:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Supplier;
import tristi.general.business.service.SupplierService;
import tristi.general.web.listitem.SupplierListItem;

/**
 * Spring MVC controller for 'Supplier' management.
 */
@Controller
public class SupplierRestController {

	@Resource
	private SupplierService supplierService;
	
	@RequestMapping( value="/items/supplier",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SupplierListItem> findAllAsListItems() {
		List<Supplier> list = supplierService.findAll();
		List<SupplierListItem> items = new LinkedList<SupplierListItem>();
		for ( Supplier supplier : list ) {
			items.add(new SupplierListItem( supplier ) );
		}
		return items;
	}
	
	@RequestMapping( value="/supplier",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Supplier> findAll() {
		return supplierService.findAll();
	}

	@RequestMapping( value="/supplier/{supplierid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Supplier findOne(@PathVariable("supplierid") String supplierid) {
		return supplierService.findById(supplierid);
	}
	
	@RequestMapping( value="/supplier",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Supplier create(@RequestBody Supplier supplier) {
		return supplierService.create(supplier);
	}

	@RequestMapping( value="/supplier/{supplierid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Supplier update(@PathVariable("supplierid") String supplierid, @RequestBody Supplier supplier) {
		return supplierService.update(supplier);
	}

	@RequestMapping( value="/supplier/{supplierid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("supplierid") String supplierid) {
		supplierService.delete(supplierid);
	}
	
}
