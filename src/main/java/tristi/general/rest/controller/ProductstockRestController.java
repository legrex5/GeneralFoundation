/*
 * Created on 6 Dec 2015 ( Time 04:13:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package tristi.general.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import tristi.general.bean.Productstock;
import tristi.general.business.service.ProductstockService;
import tristi.general.web.listitem.ProductstockListItem;

/**
 * Spring MVC controller for 'Productstock' management.
 */
@Controller
public class ProductstockRestController {

	@Resource
	private ProductstockService productstockService;
	
	@RequestMapping( value="/items/productstock",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProductstockListItem> findAllAsListItems() {
		List<Productstock> list = productstockService.findAll();
		List<ProductstockListItem> items = new LinkedList<ProductstockListItem>();
		for ( Productstock productstock : list ) {
			items.add(new ProductstockListItem( productstock ) );
		}
		return items;
	}
	
	@RequestMapping( value="/productstock",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Productstock> findAll() {
		return productstockService.findAll();
	}

	@RequestMapping( value="/productstock/{productstockid}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Productstock findOne(@PathVariable("productstockid") String productstockid) {
		return productstockService.findById(productstockid);
	}
	
	@RequestMapping( value="/productstock",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Productstock create(@RequestBody Productstock productstock) {
		return productstockService.create(productstock);
	}

	@RequestMapping( value="/productstock/{productstockid}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Productstock update(@PathVariable("productstockid") String productstockid, @RequestBody Productstock productstock) {
		return productstockService.update(productstock);
	}

	@RequestMapping( value="/productstock/{productstockid}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("productstockid") String productstockid) {
		productstockService.delete(productstockid);
	}
	
}
